version: "3.8"

services:
  workflows-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=workflows-service
    command: pnpm run start:dev -- workflows-service
    environment:
      - POSTGRES_HOST=workflows-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflows
      - NATS_URL=nats://nats:4222
      - RABBITMQ_URL=amqp://rabbitmq:5672
    deploy:
      replicas: 3 # This instructs Docker Compose to start 3 instances of the workflows-service container
    volumes:        
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./ppnpm-lock.yaml:/usr/src/app/ppnpm-lock.yaml
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./node_modules:/usr/src/app/node_modules
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      # This instructs Docker Compose to mount the "workflows-service" directory on the host to the "/usr/src/app" directory on the container
      # This allows us to make changes to the code on the host and have them reflected in the container without having to rebuild the image
      - ./apps/workflows-service:/usr/src/app/apps/workflows-service
    depends_on: # This instructs Docker Compose to start the "workflows-db" container before starting the "workflows-service" container
      - workflows-db
      - nats
      - rabbitmq
  workflows-db:
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflows
  virtual-facility:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=virtual-facility
    command: pnpm run start:dev -- virtual-facility-nestjs-ms-extension
    ports:
      - 3000:3000
    environment:
      - POSTGRES_HOST=virtual-facility-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=virtual-facility
      - NATS_URL=nats://nats:4222
      - RABBITMQ_URL=amqp://rabbitmq:5672
    volumes:        
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json    
      - ./ppnpm-lock.yaml:/usr/src/app/ppnpm-lock.yaml
      - ./tsconfig.json:/usr/src/app/tsconfig.json   
      - ./node_modules:/usr/src/app/node_modules
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      - ./apps/virtual-facility-nestjs-ms-extension:/usr/src/app/apps/virtual-facility-nestjs-ms-extension
    depends_on:
      - virtual-facility-db
      - workflows-service
      - nats
      - rabbitmq
  virtual-facility-db:
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=virtual-facility
  nats:
      image: nats:2.2.2-alpine
  alarms-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-service
    command: pnpm run start:dev -- alarms-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      - ./apps/alarms-service:/usr/src/app/apps/alarms-service
    depends_on:
      - nats
  alarms-generator:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-generator
    command: pnpm run start:dev -- alarms-generator
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      - ./apps/alarms-generator:/usr/src/app/apps/alarms-generator
    depends_on:
      - nats
  alarms-classifier-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-classifier-service
    command: pnpm run start:dev -- alarms-classifier-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      - ./apps/alarms-classifier-service:/usr/src/app/apps/alarms-classifier-service
    depends_on:
      - nats
  notifications-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=notifications-service
    command: pnpm run start:dev -- notifications-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      - ./apps/notifications-service:/usr/src/app/apps/notifications-service
    depends_on:
      - nats
  rabbitmq:
    image: rabbitmq:3.8.9-management-alpine
